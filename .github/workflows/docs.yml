name: publish-docs-to-sites-ecmwf
on:
  # REENABLE BEFORE MERGING
  # pull_request_target:
  pull_request:
    types: [opened, synchronize, reopened, closed]
  push:
    branches:
      - 'develop'
    tags:
      - '**'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install -r docs/requirements.txt
          wget https://github.com/doxygen/doxygen/archive/refs/tags/Release_1_13_2.tar.gz
          tar xzf Release_1_13_2.tar.gz
          cmake -S doxygen-Release_1_13_2 -B doxygen
          cmake --build doxygen -j 16
          sudo cmake --install doxygen
      - name: Build doc
        run: |
          mkdir -p docs_build_out
          DOCBUILD_OUTPUT=docs_out ./docs/build_docs.sh
      - name: Publish to ecmwf-sites (pull-request opened, updated, synchronized)
        if: ${{ github.event_name == 'pull_request' && github.event.action != 'closed' }}
        uses: ecmwf/reusable-workflows/ecmwf-sites-upload@feature/allow-target-dir-in-sites-upload
        with:
          token: ${{ secrets.ECMWF_SITES_TOKEN }}
          path: docs_out/sphinx
          remote_path: fdb/pull-requests/PR-${{ github.event.number }}
          space: docs
          name: dev-section
      - name: Delete from ecmwf-sites (pull-request closed)
        if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' }}
        run: |
          curl -X DELETE \
            -H "Authorization: Bearer ${{ secrets.ECMWF_SITES_TOKEN }}" \
            -H "Accept: application/json" \
            https://sites.ecmwf.int/docs/dev-section/s/api/v2/files/fdb/pull-requests/PR-${{ github.event.number }}
      - name: Publish to ecmwf-sites (tags)
        if: >-
          ${{ github.event_name == 'push' && (

            github.ref_name == 'develop' ||
            github.ref_name == 'master'  ||
            github.ref_type == 'tag'
          ) }}
        uses: ecmwf/reusable-workflows/ecmwf-sites-upload@feature/allow-target-dir-in-sites-upload
        with:
          token: ${{ secrets.ECMWF_SITES_TOKEN }}
          path: docs_out/sphinx
          remote_path: fdb/${{ github.ref_name }}
          space: docs
          name: dev-section
      
      - name: Update version selectors for tags
        if: >-
          ${{ github.event_name == 'push' && (

            github.ref_name == 'develop' ||
            github.ref_name == 'master'  ||
            github.ref_type == 'tag'
          ) }}
        env:
          ECMWF_SITES_TOKEN: ${{ secrets.ECMWF_SITES_TOKEN }}
        run: ./docs/version_gen.py

      - name: Update PR body with preview link
        if: ${{ github.event_name == 'pull_request' && github.event.action != 'closed' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr   = context.payload.pull_request;
            const repo = context.repo;
            const url  = `https://sites.ecmwf.int/docs/dev-section/fdb/pull-requests/PR-${{ github.event.number }}`

            const start = '<!-- PREVIEW-URL-START -->';
            const end   = '<!-- PREVIEW-URL-END -->';
            const snippet = `${start}\n 🌈🌦️📖 Documentation 📖🌦️🌈\n ${url}\n${end}`;

            const original = pr.body || '';
            const updated  = original.includes(start)
              ? original.replace(new RegExp(`${start}[\\s\\S]*?${end}`), snippet)
              : `${original}\n\n${snippet}`;

            await github.rest.pulls.update({
              owner: repo.owner,
              repo:  repo.repo,
              pull_number: pr.number,
              body: updated
            });
