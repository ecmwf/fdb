#!/usr/bin/env bash

set -eu

yell() { echo "$(basename "$0"): $*" >&2; }
die() { yell "$*"; exit 1; }
try() { "$@" || die "Errored HERE => '$*'"; }

export PATH=@CMAKE_BINARY_DIR@/bin:$PATH
export FDB5_CONFIG_FILE="local.yaml"
export FDB_HOME=@PROJECT_BINARY_DIR@

tname=dump-toc_test
srcdir=@CMAKE_CURRENT_SOURCE_DIR@
bindir=@CMAKE_CURRENT_BINARY_DIR@

fdbstore="$bindir/$tname/localroot"
########################################################################################################################

try cd $bindir

rm -rf $tname || true
mkdir -p $tname/localroot

try cd $tname

for f in local.yaml x.grib; do
  cp "$srcdir/$f" ./
done

########################################################################################################################
# Create a grib file with 4 steps and populate FDB

try grib_set -s step=0 x.grib 0.grib
try grib_set -s step=6 x.grib 6.grib
try grib_set -s step=9 x.grib 9.grib

for f in *.grib; do
  try grib_set -s type=an "$f" "cf.$f"
done

for f in *.grib; do
  try cat "$f" >> "$tname.grib"
done

########################################################################################################################
# Simple top-level toc
args="--structure $fdbstore/rd:xxxx:oper:20201102:0000:g/toc"


try fdb-write "$tname.grib"

out=$(fdb-dump-toc $args)

# Extract record type, toc-offset, length, and toc-path
parsed=$(echo "$out" | grep '^TOC_' | sed -E 's/^([A-Z_]+).*toc-offset: ([0-9]+), length: ([0-9]+),.*toc-path: .*\/([^/\s]+).*$/\1 \2 \3 \4/')

exp=$(cat <<EOF
TOC_INIT 0 1024 toc
TOC_INDEX 1024 1024 toc
TOC_INDEX 2048 1024 toc
EOF
)

try test "$exp" = "$parsed"


########################################################################################################################

echo "cleanup"
try rm -rf "$fdbstore/*"