#!/usr/bin/env bash

set -eux

fdbcopy="$<TARGET_FILE:fdb-copy>"
fdbread="$<TARGET_FILE:fdb-read>"
fdbwrite="$<TARGET_FILE:fdb-write>"
fdblist="$<TARGET_FILE:fdb-list>"
gribset="$<TARGET_FILE:grib_set>"
gribcmp="$<TARGET_FILE:grib_compare>"

srcdir=@CMAKE_CURRENT_SOURCE_DIR@
bindir=@CMAKE_CURRENT_BINARY_DIR@

export FDB_HOME=@PROJECT_BINARY_DIR@

### cleanup and prepare test

rm -rf $bindir/read-root
rm -rf $bindir/write-root
mkdir read-root
mkdir write-root

for f in read.yaml write.yaml schema 12.grib 12.req 9.req 6.req
do
    cp $srcdir/$f $bindir
done

### set step=24

$gribset -s step=6 12.grib 6.grib
$gribset -s step=9 12.grib 9.grib

### populate read fdb

export FDB5_CONFIG_FILE=read.yaml

$fdbwrite 6.grib
$fdbwrite 9.grib
$fdbwrite 12.grib

$fdbread 12.req ref.grib

unset FDB5_CONFIG_FILE

### copy to write fdb

$fdbcopy --source=read.yaml --target=write.yaml 12.req 9.req 6.req

### read and check it

export FDB5_CONFIG_FILE=write.yaml

$fdbread 12.req out.grib

$gribcmp -r ref.grib out.grib

### list

cat > list <<EOF
{class=rd,expver=xxxx,stream=oper,date=20201102,time=0000,domain=g}{type=fc,levtype=sfc}{step=12,param=166}
{class=rd,expver=xxxx,stream=oper,date=20201102,time=0000,domain=g}{type=fc,levtype=sfc}{step=6,param=166}
{class=rd,expver=xxxx,stream=oper,date=20201102,time=0000,domain=g}{type=fc,levtype=sfc}{step=9,param=166}
EOF

$fdblist --all --minimum-keys="" --porcelain | tee out
cmp out list 
